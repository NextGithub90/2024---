Tentu! Berikut adalah penjelasan singkat dan contoh kode untuk setiap metode tersebut di JavaScript:

1. **Split**: Metode `split()` digunakan untuk memisahkan string menjadi array substring berdasarkan pemisah tertentu.

   Contoh:
   ```javascript
   const string = "Hello,World";
   const result = string.split(",");
   console.log(result); // Output: ["Hello", "World"]
   ```

2. **Slice**: Metode `slice()` digunakan untuk menyalin sebagian array ke array baru.

   Contoh:
   ```javascript
   const array = [1, 2, 3, 4, 5];
   const result = array.slice(2, 4);
   console.log(result); // Output: [3, 4]
   ```

3. **Map**: Metode `map()` digunakan untuk membuat array baru dengan hasil pemanggilan fungsi pada setiap elemen dalam array yang ada.

   Contoh:
   ```javascript
   const array = [1, 2, 3, 4, 5];
   const result = array.map(x => x * 2);
   console.log(result); // Output: [2, 4, 6, 8, 10]
   ```

4. **Join**: Metode `join()` digunakan untuk menggabungkan semua elemen array menjadi string.

   Contoh:
   ```javascript
   const array = ["Hello", "World"];
   const result = array.join(" ");
   console.log(result); // Output: "Hello World"
   ```

5. **Reduce**: Metode `reduce()` digunakan untuk mereduksi elemen array menjadi satu nilai berdasarkan fungsi reducer.

   Contoh:
   ```javascript
   const array = [1, 2, 3, 4, 5];
   const result = array.reduce((acc, curr) => acc + curr, 0);
   console.log(result); // Output: 15 (penjumlahan semua elemen)
   ```

6. **Find**: Metode `find()` digunakan untuk mengembalikan nilai pertama dalam array yang memenuhi kondisi yang diberikan.

   Contoh:
   ```javascript
   const array = [1, 2, 3, 4, 5];
   const result = array.find(x => x > 2);
   console.log(result); // Output: 3
   ```

7. **Filter**: Metode `filter()` digunakan untuk membuat array baru dengan semua elemen yang lolos uji yang diberikan dalam fungsi.

   Contoh:
   ```javascript
   const array = [1, 2, 3, 4, 5];
   const result = array.filter(x => x % 2 === 0);
   console.log(result); // Output: [2, 4]
   ```

**1. Concat:**

Metode `concat()` digunakan untuk menggabungkan dua atau lebih array menjadi satu array baru. Bayangin lo mau nge-mix dua playlist musik favorit lo jadi satu. Nah, `concat` ini kayak DJ yang nge-mix lagu-lagunya.

**Contoh:**

```javascript
const array1 = ["Mawar", "Melati", "Anggrek"];
const array2 = ["Kembang Sepatu", "Edelweis", "Bunga Matahari"];
const result = array1.concat(array2);
console.log(result); // Output: ["Mawar", "Melati", "Anggrek", "Kembang Sepatu", "Edelweis", "Bunga Matahari"]

// Kayak playlist Spotify yang digabungin jadi satu. Mantul!
```

**2. ForEach:**

Metode `forEach()` digunakan untuk melakukan iterasi pada setiap elemen array dan menjalankan fungsi yang diberikan pada setiap elemen. Kayak lo lagi ngecek semua barang di tas lo satu per satu.

**Contoh:**

```javascript
const buah = ["Apel", "Pisang", "Jeruk", "Mangga", "Melon"];
buah.forEach(buah => console.log(`Buah ${buah} seger banget!`)); // Output: "Buah Apel seger banget!", "Buah Pisang seger banget!", dst.

// Kayak absen temen-temen di kelas. Sip!
```

**3. Some:**

Metode `some()` digunakan untuk memeriksa apakah ada elemen dalam array yang memenuhi kondisi yang diberikan. Kayak lo lagi nyariin temen lo di keramaian.

**Contoh:**

```javascript
const hewan = ["Kucing", "Anjing", "Kuda", "Sapi", "Domba"];
const result = hewan.some(hewan => hewan === "Kucing");
console.log(result); // Output: true

// Kayak nyariin jodoh di aplikasi dating. Gaskeun!
```

**4. Every:**

Metode `every()` digunakan untuk memeriksa apakah semua elemen dalam array memenuhi kondisi yang diberikan. Kayak lo lagi ngecek PR temen-temen sekelas.

**Contoh:**

```javascript
const nilai = [80, 90, 75, 85, 100];
const result = nilai.every(nilai => nilai >= 75);
console.log(result); // Output: true

// Kayak ngecek semua lampu di rumah udah dimatiin apa belum. Mantap!
```

**5. Sort:**

Metode `sort()` digunakan untuk mengurutkan elemen dalam array. Kayak lo lagi ngerapiin buku-buku di rak.

**Contoh:**

```javascript
const angka = [5, 1, 3, 2, 4];
angka.sort();
console.log(angka); // Output: [1, 2, 3, 4, 5]

// Kayak ngatur barisan antrian biar rapi. Beres!
```

**6. Reverse:**

Metode `reverse()` digunakan untuk membalik urutan elemen dalam array. Kayak lo lagi nge rewind video.

**Contoh:**

```javascript
const huruf = ["A", "B", "C", "D", "E"];
huruf.reverse();
console.log(huruf); // Output: ["E", "D", "C", "B", "A"]

// Kayak ngebalik baju yang kebuka bagian belakangnya. Keren!
```

**7. Includes:**

Metode `includes()` digunakan untuk memeriksa apakah suatu nilai terdapat dalam array. Kayak lo lagi nyariin nama lo di daftar hadir.

**Contoh:**

```javascript
const warna = ["Merah", "Biru", "Hijau", "Kuning", "Ungu"];
const result = warna.includes("Biru");
console.log(result); // Output: true

// Kayak nyariin makanan favorit di menu restoran. Yummy!
```

**8. IndexOf:**

Metode `indexOf()` digunakan untuk mencari indeks pertama dari suatu nilai dalam array. Kayak lo lagi nyariin nomor rumah temen lo.

**Contoh:**

```javascript
const makanan = ["Nasi Goreng", "Mie Ayam", "Bakso", "Soto", "Sate"];
const result = makanan.indexOf("Bakso");
console.log(result); // Output: 2

// Kayak nyariin posisi pemain favorit di lapangan sepak bola. Go, go, go!
```

**9. LastIndexOf:**

Metode `lastIndexOf()` digunakan untuk mencari indeks terakhir dari suatu nilai dalam array. Kayak lo lagi nyariin jejak kaki di pasir pantai.

**Contoh:**

```javascript
const minuman = ["Teh", "Kopi", "Jus Jeruk", "Susu", "Teh"];
const result = minuman.lastIndexOf("Teh");
console.log(result); // Output: 4

// Kayak nyariin barang yang ketinggalan di kereta. Semoga ketemu!
```

**10. ReduceRight:**

Metode `reduceRight()` mirip dengan `reduce`, tetapi mereduksi elemen array dari kanan ke kiri. Kayak lo lagi ngerangkai kalimat dari kata-kata terakhir.

**Contoh:**

```javascript
const kalimat = ["adalah", "dunia", "yang", "indah", "ini"];
const result = kalimat.reduceRight((acc, curr) => `${curr} ${acc}`, "");
console.log(result); // Output: "ini yang indah dunia adalah"

// Kayak ngerajut syal dari benang wol. Cantik!
```

**Penjelasan Lebih Ringkas:**

* **Concat:** Gabungin dua array jadi satu. Kayak DJ nge-mix lagu.
* **ForEach:** Cek semua elemen array satu per satu. Kayak absen temen di kelas.
* **Some:** Cari elemen yang memenuhi kondisi. Kayak nyariin jodoh di aplikasi dating.
* **Every:** Cek semua elemen memenuhi kondisi. Kayak ngecek PR temen sekelas.
* **Sort:** Urutkan elemen array. Kayak ngerapiin buku-buku di rak.
* **Reverse:** Balik urutan elemen array. Kayak nge-rewind video.
* **Includes:** Cek nilai ada di array. Kayak nyariin nama di daftar hadir.
* **IndexOf:** Cari indeks pertama nilai di array. Kayak nyariin nomor rumah temen.
* **lastIndexOf:** Cari indeks terakhir nilai di array. Kayak nyariin jejak kaki di pantai.
* **ReduceRight:** Rangkai kalimat dari kata-kata terakhir. Kayak ngerajut syal dari benang wol.

**Analogi Gaul:**

* **Concat:** Mix dua playlist musik jadi satu. Kayak DJ nge-mix lagu hits.
* **ForEach:** Cek semua barang di tas, gaes. Biar ga ketinggalan.
* **Some:** Cari gebetan di Tinder. Siapa tau dapet jodoh.
* **Every:** Pastikan semua tugas udah kelar. Biar ga panik pas deadline.
* **Sort:** Rapiin koleksi album K-Pop biar aesthetic.
* **Reverse:** Putar balik video TikTok biar makin keren.
* **Includes:** Cari nama kamu di daftar undangan. Mantap!
* **IndexOf:** Cari posisi kamu di barisan antrian. Sabar ya, guys.
* **lastIndexOf:** Temuin jejak kaki doi di pantai. So sweet!
* **ReduceRight:** Bikin caption Instagram yang panjang. Biar followers makin banyak.

1. **Map**: Jadi, bayangin kamu punya daftar temen-temen yang ingin kamu undang ke pesta. Nah, map itu kayak kamu lagi ngasih kado ke tiap temen kamu sesuai selera masing-masing. Misalnya, temen A suka kado warna merah, temen B suka kado warna biru, kamu bisa kasih kado sesuai dengan yang mereka suka.

2. **Filter**: Sekarang, bayangin kamu lagi nyari baju favorit kamu di lemari yang penuh dengan baju-baju. Nah, filter itu kayak kamu lagi nyari baju favorit kamu yang warna biru. Jadi, kamu 'nyaring' baju-baju yang warna biru aja dari sekian banyak baju yang ada di lemari.

3. **Find**: Nah, beda lagi dengan find. Find itu kayak kamu lagi nyari kunci yang hilang di dalam tas kamu. Kamu nggak perlu 'nyaring' atau 'ngecek satu-satu' isi tas kamu, tapi cukup mencari kunci yang hilang aja. Begitu ketemu, langsung deh dapat kuncinya.

Jadi, intinya map itu untuk 'mengubah' tiap item dalam array, filter itu untuk 'menyaring' item dalam array berdasarkan kondisi tertentu, dan find itu untuk 'mencari' item pertama yang memenuhi kondisi tertentu. Semoga lebih paham ya bro!


math.Florr = pembulatan ke bawaah
math.ceil = pembulatan ke atas
math.round = pembulatan terdekat

// operator || selagi salah satu nilai bernilai true hasilnya akan tetap true
// operator && selagi salah satu nilai bernilai false hasilnya akan tetap false

// penggambungan array menggunakan method : concat